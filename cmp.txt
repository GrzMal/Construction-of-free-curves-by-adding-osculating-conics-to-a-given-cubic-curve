proc exp(list #){
	poly arr=1;
	int @i,@j;
	list expCont;
	for(@i=1;@i<=size(#);@i++){
		arr=arr*#[@i];
	}
	module M=mstd(syz(jacob(arr)))[2];
	for(@i=1;@i<=size(M);@i++){
		for(@j=1;@j<=size(#);@j++){
			if(deg(M[@i][@j])>0){
				expCont=insert(expCont,deg(M[@i][@j]),size(expCont));
				break;
			}
		}
	}
return(expCont);
}
proc projTrans(poly @F, poly a, poly b, poly c){
	matrix tr[3][3]=c,0,a,0,c,b,0,0,c;
	matrix v[3][1]=x,y,z;
	@F=substitute(@F,ideal(x,y,z),ideal(tr*v));
return(@F);
}
proc SingCls(poly arrdh){
	def @R=basering;
	string @min="minpoly="+string(minpoly);
	ring R2=(0,e),(x,y),ds;
	execute(@min);
	poly arrdh=imap(@R,arrdh);
	classify(arrdh);
return();
}
proc singAGV(poly arr){
	list mAss=minAssGTZ(jacob(arr));
	poly iSing;
	for(int @i=1;@i<=size(mAss);@i++){
		if(deg(mAss[@i][1])*deg(mAss[@i][2])==1){
			"";"ideal of the singular point: "+string(print(mAss[@i],"2%s"));
			iSing=projTrans(arr,-coeffs(mAss[@i][2],z)[1][2]/coeffs(mAss[@i][2],x)[1][2],-coeffs(mAss[@i][1],z)[1][2]/coeffs(mAss[@i][1],y)[1][2],1);
			iSing=substitute(iSing,z,1);
			SingCls(iSing);
		}
		else{"--cannot calcualte singular point- procedure skipped, change field extension--";}
	}
}
option(redSB);
LIB "primdec.lib";
LIB "classify.lib";
LIB "linalg.lib";
ring R1=(0,e),(x,y,z),dp;
minpoly=e2+e+1;
int i,j;
"";
"*********************************************************************";
"* WARNING! This file requires modified Singular 'classify.lib' file *";
"*               which should replace the original one               *";
"*             check 'classify.txt' for the replacement file         *";
"*********************************************************************";
"           press 'enter' button after each 'pause' to resume         ";
pause();
"";
"         verification of calculations in the proof of Theorem 3.2            ";
poly E=x3+y3-xyz;
list OCE=21*(x2+y2)-22xy-6*(x+y)*z+z2,
21*(ex2+e2y2)-22xy-6*(e2x+ey)*z+z2,
21*(e2x2+ey2)-22xy-6*(ex+e2y)*z+z2;

for(i=1;i<=size(OCE);i++){
	"";"exponents of {E,C("+string(i)+")}: "+string(exp(E,OCE[i]));
	singAGV(E*OCE[i]);
	"----------------------------------------------------------------------------------------";
	pause();
}
for(i=1;i<=size(OCE)-1;i++){
	for(j=i+1;j<=size(OCE);j++){
		"";"exponents of {E,C("+string(i)+"),C("+string(j)+")}: "+string(exp(E,OCE[i],OCE[j]));
		singAGV(E*OCE[i]*OCE[j]);
		"----------------------------------------------------------------------------------------";
		pause();
	}
}
"exponents of {E,C(1),C(2),C(3)}: "+string(exp(E,OCE[1],OCE[2],OCE[3]));
pause();
"";"         verification of calculations in Example 3.4            ";"";
ring R2=(0,e),(x,y,z),dp;
minpoly=e2-5;
poly E=y2z-x3-x2z;
list OCE=2x2+y2+z2+3xz,
1125x2+625y2+64z2+400eyz+1200xz+350exy;
"exponents of {E,C(1),C(2)}: "+string(exp(E,OCE[1],OCE[2]));
"----------------------------------------------------------------------------------------";
pause();
"";
"         verification of calculations in Section 4           ";
"";
ring R3=(0,e),(x,y,z),dp;
minpoly=e6+3e5+6e4+3e3+9e+9;
int k; int cnt=0;
poly E=x3+y3+z3;
list OCE=3*x2-6*xy+3*y2+(-e5-2e4-5e3-3e-6)*xz+(-e5-2e4-5e3-3e-6)*yz+(2e5+4e4+8e3+6e+18)*z2,
3*x2+(-e5-2e4-5e3-3e-6)*xy+(2e5+4e4+8e3+6e+18)*y2-6*xz+(-e5-2e4-5e3-3e-6)*yz+3*z2,
12*x2+(-2e5-4e4-8e3-6e-18)*xy+(-e5-2e4-5e3-3e-6)*y2+(-2e5-4e4-8e3-6e-18)*xz+(2e5+4e4+10e3+6e+12)*yz+(-e5-2e4-5e3-3e-6)*z2,
9*x2+(-4e5-6e4-12e3+12e2-18)*xy+(-2e5-3e4-6e3+6e2-18)*y2+(-e5-3e4-3e3+3e2+9e-9)*xz+(-3e5-6e4-15e3-9e-18)*yz+(-2e5-6e4-12e3-12e2-18)*z2,
9*x2+(4e5+9e4+18e3-3e2+27)*xy+(-4e5-6e4-12e3+12e2-18e-36)*y2+(4e5+6e4+12e3-12e2+36)*xz+(-3e5-6e4-15e3-9e-18)*yz+(2e5+3e4+6e3-6e2+9)*z2,
36*x2+(2e5+6e4+12e3+12e2+18)*xy+(-e5-3e4-3e3+3e2+9e-9)*y2+(4e5+6e4+12e3-12e2+18e+36)*xz+(6e5+12e4+30e3+18e+36)*yz+(4e5+9e4+18e3-3e2+27)*z2,
9*x2+(4e5+6e4+12e3-12e2+36)*xy+(2e5+3e4+6e3-6e2+9)*y2+(4e5+9e4+18e3-3e2+27)*xz+(-3e5-6e4-15e3-9e-18)*yz+(-4e5-6e4-12e3+12e2-18e-36)*z2,
9*x2+(-e5-3e4-3e3+3e2+9e-9)*xy+(-2e5-6e4-12e3-12e2-18)*y2+(-4e5-6e4-12e3+12e2-18)*xz+(-3e5-6e4-15e3-9e-18)*yz+(-2e5-3e4-6e3+6e2-18)*z2,
36*x2+(4e5+6e4+12e3-12e2+18e+36)*xy+(4e5+9e4+18e3-3e2+27)*y2+(2e5+6e4+12e3+12e2+18)*xz+(6e5+12e4+30e3+18e+36)*yz+(-e5-3e4-3e3+3e2+9e-9)*z2,
9*x2-18*xy+9*y2+(4e5+9e4+18e3-3e2+27)*xz+(4e5+9e4+18e3-3e2+27)*yz+(-4e5-6e4-12e3+12e2-18e-36)*z2,
9*x2+(4e5+9e4+18e3-3e2+27)*xy+(-4e5-6e4-12e3+12e2-18e-36)*y2-18*xz+(4e5+9e4+18e3-3e2+27)*yz+9*z2,
36*x2+(4e5+6e4+12e3-12e2+18e+36)*xy+(4e5+9e4+18e3-3e2+27)*y2+(4e5+6e4+12e3-12e2+18e+36)*xz+(-8e5-18e4-36e3+6e2-54)*yz+(4e5+9e4+18e3-3e2+27)*z2,
9*x2+(-4e5-6e4-12e3+12e2-18)*xy+(-2e5-3e4-6e3+6e2-18)*y2+(-3e5-6e4-15e3-9e-18)*xz+(4e5+9e4+18e3-3e2+27)*yz+(6e5+12e4+24e3+18e+54)*z2,
9*x2+(-e5-3e4-3e3+3e2+9e-9)*xy+(-2e5-6e4-12e3-12e2-18)*y2+(4e5+6e4+12e3-12e2+36)*xz+(4e5+9e4+18e3-3e2+27)*yz+(2e5+3e4+6e3-6e2+9)*z2,
36*x2+(-6e5-12e4-24e3-18e-54)*xy+(-3e5-6e4-15e3-9e-18)*y2+(2e5+6e4+12e3+12e2+18)*xz+(-8e5-18e4-36e3+6e2-54)*yz+(-e5-3e4-3e3+3e2+9e-9)*z2,
9*x2+(4e5+6e4+12e3-12e2+36)*xy+(2e5+3e4+6e3-6e2+9)*y2+(-e5-3e4-3e3+3e2+9e-9)*xz+(4e5+9e4+18e3-3e2+27)*yz+(-2e5-6e4-12e3-12e2-18)*z2,
9*x2+(-3e5-6e4-15e3-9e-18)*xy+(6e5+12e4+24e3+18e+54)*y2+(-4e5-6e4-12e3+12e2-18)*xz+(4e5+9e4+18e3-3e2+27)*yz+(-2e5-3e4-6e3+6e2-18)*z2,
36*x2+(2e5+6e4+12e3+12e2+18)*xy+(-e5-3e4-3e3+3e2+9e-9)*y2+(-6e5-12e4-24e3-18e-54)*xz+(-8e5-18e4-36e3+6e2-54)*yz+(-3e5-6e4-15e3-9e-18)*z2,
9*x2-18*xy+9*y2+(-e5-3e4-3e3+3e2+9e-9)*xz+(-e5-3e4-3e3+3e2+9e-9)*yz+(-2e5-6e4-12e3-12e2-18)*z2,
9*x2+(-e5-3e4-3e3+3e2+9e-9)*xy+(-2e5-6e4-12e3-12e2-18)*y2-18*xz+(-e5-3e4-3e3+3e2+9e-9)*yz+9*z2,
36*x2+(2e5+6e4+12e3+12e2+18)*xy+(-e5-3e4-3e3+3e2+9e-9)*y2+(2e5+6e4+12e3+12e2+18)*xz+(2e5+6e4+6e3-6e2-18e+18)*yz+(-e5-3e4-3e3+3e2+9e-9)*z2,
9*x2+(-4e5-6e4-12e3+12e2-18)*xy+(-2e5-3e4-6e3+6e2-18)*y2+(4e5+9e4+18e3-3e2+27)*xz+(-e5-3e4-3e3+3e2+9e-9)*yz+(-4e5-6e4-12e3+12e2-18e-36)*z2,
9*x2+(-3e5-6e4-15e3-9e-18)*xy+(6e5+12e4+24e3+18e+54)*y2+(4e5+6e4+12e3-12e2+36)*xz+(-e5-3e4-3e3+3e2+9e-9)*yz+(2e5+3e4+6e3-6e2+9)*z2,
36*x2+(4e5+6e4+12e3-12e2+18e+36)*xy+(4e5+9e4+18e3-3e2+27)*y2+(-6e5-12e4-24e3-18e-54)*xz+(2e5+6e4+6e3-6e2-18e+18)*yz+(-3e5-6e4-15e3-9e-18)*z2,
9*x2+(4e5+6e4+12e3-12e2+36)*xy+(2e5+3e4+6e3-6e2+9)*y2+(-3e5-6e4-15e3-9e-18)*xz+(-e5-3e4-3e3+3e2+9e-9)*yz+(6e5+12e4+24e3+18e+54)*z2,
9*x2+(4e5+9e4+18e3-3e2+27)*xy+(-4e5-6e4-12e3+12e2-18e-36)*y2+(-4e5-6e4-12e3+12e2-18)*xz+(-e5-3e4-3e3+3e2+9e-9)*yz+(-2e5-3e4-6e3+6e2-18)*z2,
36*x2+(-6e5-12e4-24e3-18e-54)*xy+(-3e5-6e4-15e3-9e-18)*y2+(4e5+6e4+12e3-12e2+18e+36)*xz+(2e5+6e4+6e3-6e2-18e+18)*yz+(4e5+9e4+18e3-3e2+27)*z2;

"  classification of singularity in point (1,1,0) for polynomial C(1)*C(10)*C(19) in the proof of Theorem 4.10 ";
poly F=x6-6*x5y+15*x4y2-4*x3y3+15*x2y4-6*xy5+y6+48*x5z+48*x3y2z+48*x4z2+48*x3yz2+32*x3z3;
SingCls(substitute(F,z,1));
"----------------------------------------------------------------------------------------";
for(i=1;i<=size(OCE);i++){
"exponents of {E,C("+string(i)+")}: "+string(exp(E,OCE[i]));
}
pause();
for(i=1;i<=size(OCE)-1;i++){
	for(j=i+1;j<=size(OCE);j++){
		"exponents of {E,C("+string(i)+"),C("+string(j)+")}: "+string(exp(E,OCE[i],OCE[j]));
		cnt++;
		if(cnt==30){
			pause(); cnt=0;
		}
	}
}
pause();
cnt=0;
for(i=1;i<=size(OCE)-2;i++){
	for(j=i+1;j<=size(OCE)-1;j++){
		for(k=j+1;k<=size(OCE);k++){
			"exponents of {E,C("+string(i)+"),C("+string(j)+"),C("+string(k)+")}: "+string(exp(E,OCE[i],OCE[j],OCE[k]));
			cnt++;
			if(cnt==30){
				pause(); cnt=0;
			}
		}
	}
}
